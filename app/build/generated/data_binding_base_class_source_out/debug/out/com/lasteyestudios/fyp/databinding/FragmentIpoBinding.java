// Generated by view binder compiler. Do not edit!
package com.lasteyestudios.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.lasteyestudios.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentIpoBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsableToolbar;

  @NonNull
  public final TextView ipoAlertText;

  @NonNull
  public final LottieAnimationView logoImage;

  @NonNull
  public final RecyclerView mainRecyclerView;

  @NonNull
  public final Button retryFab;

  private FragmentIpoBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull CollapsingToolbarLayout collapsableToolbar,
      @NonNull TextView ipoAlertText, @NonNull LottieAnimationView logoImage,
      @NonNull RecyclerView mainRecyclerView, @NonNull Button retryFab) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.collapsableToolbar = collapsableToolbar;
    this.ipoAlertText = ipoAlertText;
    this.logoImage = logoImage;
    this.mainRecyclerView = mainRecyclerView;
    this.retryFab = retryFab;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentIpoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentIpoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ipo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentIpoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsable_toolbar;
      CollapsingToolbarLayout collapsableToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsableToolbar == null) {
        break missingId;
      }

      id = R.id.ipo_alert_text;
      TextView ipoAlertText = ViewBindings.findChildViewById(rootView, id);
      if (ipoAlertText == null) {
        break missingId;
      }

      id = R.id.logo_image;
      LottieAnimationView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      id = R.id.main_recycler_view;
      RecyclerView mainRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (mainRecyclerView == null) {
        break missingId;
      }

      id = R.id.retry_fab;
      Button retryFab = ViewBindings.findChildViewById(rootView, id);
      if (retryFab == null) {
        break missingId;
      }

      return new FragmentIpoBinding((CoordinatorLayout) rootView, appBarLayout, collapsableToolbar,
          ipoAlertText, logoImage, mainRecyclerView, retryFab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
