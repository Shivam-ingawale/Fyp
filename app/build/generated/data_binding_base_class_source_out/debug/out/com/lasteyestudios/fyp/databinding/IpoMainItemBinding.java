// Generated by view binder compiler. Do not edit!
package com.lasteyestudios.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lasteyestudios.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IpoMainItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView arrow;

  @NonNull
  public final RecyclerView companyRecycler;

  @NonNull
  public final TextView ipoCategory;

  @NonNull
  public final ConstraintLayout ipoCategoryContainer;

  @NonNull
  public final TextView noDataAvailable;

  private IpoMainItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView arrow,
      @NonNull RecyclerView companyRecycler, @NonNull TextView ipoCategory,
      @NonNull ConstraintLayout ipoCategoryContainer, @NonNull TextView noDataAvailable) {
    this.rootView = rootView;
    this.arrow = arrow;
    this.companyRecycler = companyRecycler;
    this.ipoCategory = ipoCategory;
    this.ipoCategoryContainer = ipoCategoryContainer;
    this.noDataAvailable = noDataAvailable;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IpoMainItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IpoMainItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ipo_main_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IpoMainItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow;
      ImageView arrow = ViewBindings.findChildViewById(rootView, id);
      if (arrow == null) {
        break missingId;
      }

      id = R.id.company_recycler;
      RecyclerView companyRecycler = ViewBindings.findChildViewById(rootView, id);
      if (companyRecycler == null) {
        break missingId;
      }

      id = R.id.ipo_category;
      TextView ipoCategory = ViewBindings.findChildViewById(rootView, id);
      if (ipoCategory == null) {
        break missingId;
      }

      id = R.id.ipo_category_container;
      ConstraintLayout ipoCategoryContainer = ViewBindings.findChildViewById(rootView, id);
      if (ipoCategoryContainer == null) {
        break missingId;
      }

      id = R.id.no_data_available;
      TextView noDataAvailable = ViewBindings.findChildViewById(rootView, id);
      if (noDataAvailable == null) {
        break missingId;
      }

      return new IpoMainItemBinding((ConstraintLayout) rootView, arrow, companyRecycler,
          ipoCategory, ipoCategoryContainer, noDataAvailable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
