// Generated by view binder compiler. Do not edit!
package com.lasteyestudios.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lasteyestudios.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailsListingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView detailsListingCard;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView issuePrice;

  @NonNull
  public final TextView issuePriceText;

  @NonNull
  public final TextView listingDetailsText;

  @NonNull
  public final TextView listingGains;

  @NonNull
  public final TextView listingGainsText;

  @NonNull
  public final TextView listingPrice;

  @NonNull
  public final TextView listingPriceText;

  private DetailsListingBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView detailsListingCard, @NonNull Guideline guideline2,
      @NonNull TextView issuePrice, @NonNull TextView issuePriceText,
      @NonNull TextView listingDetailsText, @NonNull TextView listingGains,
      @NonNull TextView listingGainsText, @NonNull TextView listingPrice,
      @NonNull TextView listingPriceText) {
    this.rootView = rootView;
    this.detailsListingCard = detailsListingCard;
    this.guideline2 = guideline2;
    this.issuePrice = issuePrice;
    this.issuePriceText = issuePriceText;
    this.listingDetailsText = listingDetailsText;
    this.listingGains = listingGains;
    this.listingGainsText = listingGainsText;
    this.listingPrice = listingPrice;
    this.listingPriceText = listingPriceText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailsListingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailsListingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.details_listing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailsListingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.details_listing_card;
      CardView detailsListingCard = ViewBindings.findChildViewById(rootView, id);
      if (detailsListingCard == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.issue_price;
      TextView issuePrice = ViewBindings.findChildViewById(rootView, id);
      if (issuePrice == null) {
        break missingId;
      }

      id = R.id.issue_price_text;
      TextView issuePriceText = ViewBindings.findChildViewById(rootView, id);
      if (issuePriceText == null) {
        break missingId;
      }

      id = R.id.listing_details_text;
      TextView listingDetailsText = ViewBindings.findChildViewById(rootView, id);
      if (listingDetailsText == null) {
        break missingId;
      }

      id = R.id.listing_gains;
      TextView listingGains = ViewBindings.findChildViewById(rootView, id);
      if (listingGains == null) {
        break missingId;
      }

      id = R.id.listing_gains_text;
      TextView listingGainsText = ViewBindings.findChildViewById(rootView, id);
      if (listingGainsText == null) {
        break missingId;
      }

      id = R.id.listing_price;
      TextView listingPrice = ViewBindings.findChildViewById(rootView, id);
      if (listingPrice == null) {
        break missingId;
      }

      id = R.id.listing_price_text;
      TextView listingPriceText = ViewBindings.findChildViewById(rootView, id);
      if (listingPriceText == null) {
        break missingId;
      }

      return new DetailsListingBinding((ConstraintLayout) rootView, detailsListingCard, guideline2,
          issuePrice, issuePriceText, listingDetailsText, listingGains, listingGainsText,
          listingPrice, listingPriceText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
