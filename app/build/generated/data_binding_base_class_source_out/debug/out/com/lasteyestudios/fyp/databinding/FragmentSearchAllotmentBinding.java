// Generated by view binder compiler. Do not edit!
package com.lasteyestudios.fyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.lasteyestudios.fyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchAllotmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView allot;

  @NonNull
  public final TextView allotText;

  @NonNull
  public final LottieAnimationView allotmentMeme;

  @NonNull
  public final TextView amtAdj;

  @NonNull
  public final TextView amtAdjText;

  @NonNull
  public final RadioButton applicationNumber;

  @NonNull
  public final TextView appliedFor;

  @NonNull
  public final TextView appliedForText;

  @NonNull
  public final TextView companyName;

  @NonNull
  public final TextView cutoffPrice;

  @NonNull
  public final TextView cutoffPriceText;

  @NonNull
  public final RadioButton dpClient;

  @NonNull
  public final ImageButton editPasteButton;

  @NonNull
  public final TextInputEditText editText;

  @NonNull
  public final TextInputLayout editTextLayout;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ImageButton letsGoButton;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView nameText;

  @NonNull
  public final TextView noRecordsFound;

  @NonNull
  public final RadioButton pan;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final CardView resultCard;

  @NonNull
  public final ExtendedFloatingActionButton retryAllotmentFab;

  @NonNull
  public final Button reviewFab;

  @NonNull
  public final TextView searchIpoAllotmentStatusWith;

  @NonNull
  public final CardView totalScreen;

  private FragmentSearchAllotmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView allot, @NonNull TextView allotText,
      @NonNull LottieAnimationView allotmentMeme, @NonNull TextView amtAdj,
      @NonNull TextView amtAdjText, @NonNull RadioButton applicationNumber,
      @NonNull TextView appliedFor, @NonNull TextView appliedForText, @NonNull TextView companyName,
      @NonNull TextView cutoffPrice, @NonNull TextView cutoffPriceText,
      @NonNull RadioButton dpClient, @NonNull ImageButton editPasteButton,
      @NonNull TextInputEditText editText, @NonNull TextInputLayout editTextLayout,
      @NonNull Guideline guideline2, @NonNull ImageButton letsGoButton, @NonNull TextView name,
      @NonNull TextView nameText, @NonNull TextView noRecordsFound, @NonNull RadioButton pan,
      @NonNull RadioGroup radioGroup, @NonNull CardView resultCard,
      @NonNull ExtendedFloatingActionButton retryAllotmentFab, @NonNull Button reviewFab,
      @NonNull TextView searchIpoAllotmentStatusWith, @NonNull CardView totalScreen) {
    this.rootView = rootView;
    this.allot = allot;
    this.allotText = allotText;
    this.allotmentMeme = allotmentMeme;
    this.amtAdj = amtAdj;
    this.amtAdjText = amtAdjText;
    this.applicationNumber = applicationNumber;
    this.appliedFor = appliedFor;
    this.appliedForText = appliedForText;
    this.companyName = companyName;
    this.cutoffPrice = cutoffPrice;
    this.cutoffPriceText = cutoffPriceText;
    this.dpClient = dpClient;
    this.editPasteButton = editPasteButton;
    this.editText = editText;
    this.editTextLayout = editTextLayout;
    this.guideline2 = guideline2;
    this.letsGoButton = letsGoButton;
    this.name = name;
    this.nameText = nameText;
    this.noRecordsFound = noRecordsFound;
    this.pan = pan;
    this.radioGroup = radioGroup;
    this.resultCard = resultCard;
    this.retryAllotmentFab = retryAllotmentFab;
    this.reviewFab = reviewFab;
    this.searchIpoAllotmentStatusWith = searchIpoAllotmentStatusWith;
    this.totalScreen = totalScreen;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchAllotmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchAllotmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_allotment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchAllotmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allot;
      TextView allot = ViewBindings.findChildViewById(rootView, id);
      if (allot == null) {
        break missingId;
      }

      id = R.id.allot_text;
      TextView allotText = ViewBindings.findChildViewById(rootView, id);
      if (allotText == null) {
        break missingId;
      }

      id = R.id.allotment_meme;
      LottieAnimationView allotmentMeme = ViewBindings.findChildViewById(rootView, id);
      if (allotmentMeme == null) {
        break missingId;
      }

      id = R.id.amt_adj;
      TextView amtAdj = ViewBindings.findChildViewById(rootView, id);
      if (amtAdj == null) {
        break missingId;
      }

      id = R.id.amt_adj_text;
      TextView amtAdjText = ViewBindings.findChildViewById(rootView, id);
      if (amtAdjText == null) {
        break missingId;
      }

      id = R.id.application_number;
      RadioButton applicationNumber = ViewBindings.findChildViewById(rootView, id);
      if (applicationNumber == null) {
        break missingId;
      }

      id = R.id.applied_for;
      TextView appliedFor = ViewBindings.findChildViewById(rootView, id);
      if (appliedFor == null) {
        break missingId;
      }

      id = R.id.applied_for_text;
      TextView appliedForText = ViewBindings.findChildViewById(rootView, id);
      if (appliedForText == null) {
        break missingId;
      }

      id = R.id.company_name;
      TextView companyName = ViewBindings.findChildViewById(rootView, id);
      if (companyName == null) {
        break missingId;
      }

      id = R.id.cutoff_price;
      TextView cutoffPrice = ViewBindings.findChildViewById(rootView, id);
      if (cutoffPrice == null) {
        break missingId;
      }

      id = R.id.cutoff_price_text;
      TextView cutoffPriceText = ViewBindings.findChildViewById(rootView, id);
      if (cutoffPriceText == null) {
        break missingId;
      }

      id = R.id.dp_client;
      RadioButton dpClient = ViewBindings.findChildViewById(rootView, id);
      if (dpClient == null) {
        break missingId;
      }

      id = R.id.edit_paste_button;
      ImageButton editPasteButton = ViewBindings.findChildViewById(rootView, id);
      if (editPasteButton == null) {
        break missingId;
      }

      id = R.id.edit_text;
      TextInputEditText editText = ViewBindings.findChildViewById(rootView, id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.edit_text_layout;
      TextInputLayout editTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (editTextLayout == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.lets_go_button;
      ImageButton letsGoButton = ViewBindings.findChildViewById(rootView, id);
      if (letsGoButton == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_text;
      TextView nameText = ViewBindings.findChildViewById(rootView, id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.no_records_found;
      TextView noRecordsFound = ViewBindings.findChildViewById(rootView, id);
      if (noRecordsFound == null) {
        break missingId;
      }

      id = R.id.pan;
      RadioButton pan = ViewBindings.findChildViewById(rootView, id);
      if (pan == null) {
        break missingId;
      }

      id = R.id.radio_group;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.result_card;
      CardView resultCard = ViewBindings.findChildViewById(rootView, id);
      if (resultCard == null) {
        break missingId;
      }

      id = R.id.retry_allotment_fab;
      ExtendedFloatingActionButton retryAllotmentFab = ViewBindings.findChildViewById(rootView, id);
      if (retryAllotmentFab == null) {
        break missingId;
      }

      id = R.id.review_fab;
      Button reviewFab = ViewBindings.findChildViewById(rootView, id);
      if (reviewFab == null) {
        break missingId;
      }

      id = R.id.search_ipo_allotment_status_with;
      TextView searchIpoAllotmentStatusWith = ViewBindings.findChildViewById(rootView, id);
      if (searchIpoAllotmentStatusWith == null) {
        break missingId;
      }

      id = R.id.total_screen;
      CardView totalScreen = ViewBindings.findChildViewById(rootView, id);
      if (totalScreen == null) {
        break missingId;
      }

      return new FragmentSearchAllotmentBinding((ConstraintLayout) rootView, allot, allotText,
          allotmentMeme, amtAdj, amtAdjText, applicationNumber, appliedFor, appliedForText,
          companyName, cutoffPrice, cutoffPriceText, dpClient, editPasteButton, editText,
          editTextLayout, guideline2, letsGoButton, name, nameText, noRecordsFound, pan, radioGroup,
          resultCard, retryAllotmentFab, reviewFab, searchIpoAllotmentStatusWith, totalScreen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
